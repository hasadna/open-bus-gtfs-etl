name: Python package

on: [push, pull_request]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: open-bus-gtfs-etl

    - name: Checkout tools repo
      uses: actions/checkout@v2
      with:
        repository: hasadna/open-bus-stride-db
        path: open-bus-stride-db

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        pip install --upgrade pip &&\
        pip install -r open-bus-stride-db/requirements.txt &&\
        pip install -e open-bus-stride-db &&\
        pip install -r open-bus-gtfs-etl/requirements.txt &&\
        pip install -r open-bus-gtfs-etl/tests/requirements.txt &&\
        pip install -e open-bus-gtfs-etl
    - name: Test and lint
      run: |
        cd open-bus-gtfs-etl &&\
        bin/lint.sh &&\
        pytest --cov-report=xml --cov=open_bus_gtfs_etl
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
  deploy:
    needs: test
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: deploy
        if: ${{ github.event_name == 'push' }}
        env:
          DOCKER_APP_IMAGE_NAME: "ghcr.io/hasadna/open-bus-gtfs-etl/open-bus-gtfs-etl"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_BUS_PIPELINES_DEPLOY_KEY: ${{ secrets.OPEN_BUS_PIPELINES_DEPLOY_KEY }}
        run: |
          echo "${GITHUB_TOKEN}" | docker login ghcr.io -u hasadna --password-stdin &&\
          if docker pull "${DOCKER_APP_IMAGE_NAME}:latest"; then
            CACHE_FROM_ARG="--cache-from ${DOCKER_APP_IMAGE_NAME}:latest"
          else
            CACHE_FROM_ARG=""
          fi &&\
          docker build $CACHE_FROM_ARG -t app . &&\
          docker tag app "${DOCKER_APP_IMAGE_NAME}:${GITHUB_SHA}" &&\
          docker push "${DOCKER_APP_IMAGE_NAME}:${GITHUB_SHA}" &&\
          git config --global user.name "Open Bus GTFS ETL CI" &&\
          git config --global user.email "open-bus-gtfs-etl-ci@localhost" &&\
          OPEN_BUS_GTFS_ETL_ROOTDIR="$(pwd)" &&\
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            docker tag app "${DOCKER_APP_IMAGE_NAME}:latest" &&\
            docker push "${DOCKER_APP_IMAGE_NAME}:latest" &&\
            if ! git log -1 --pretty=format:"%s" | grep -- --no-deploy; then
              cd `mktemp -d` &&\
              echo "${OPEN_BUS_PIPELINES_DEPLOY_KEY}" > open_bus_pipelines_deploy_key &&\
              chmod 400 open_bus_pipelines_deploy_key &&\
              export GIT_SSH_COMMAND="ssh -i `pwd`/open_bus_pipelines_deploy_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" &&\
              git clone git@github.com:hasadna/open-bus-pipelines.git &&\
              cd open-bus-pipelines &&\
              echo "-r https://github.com/hasadna/open-bus-gtfs-etl/raw/${GITHUB_SHA}/requirements.txt" > requirements-gtfs-etl.txt &&\
              echo "https://github.com/hasadna/open-bus-gtfs-etl/archive/${GITHUB_SHA}.zip" >> requirements-gtfs-etl.txt &&\
              git add requirements-gtfs-etl.txt &&\
              git commit -m "automatic update of gtfs etl requirements" &&\
              git push origin main
            fi
          fi
